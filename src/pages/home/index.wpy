<template>
  <view class="map" >
    <!--<Message :title.sync="title" ></Message>-->
    <map id="map" longitude="{{myLong}}" latitude="{{myLat}}" scale="14" markers="{{markers}}"  @markertap="markertap" @regionchange="regionchange" show-location style="width: 100%; height: {{height}};">
      <cover-view class='btn'  @tap="showModal_v" style="background: white;width: 580rpx;position: absolute;right: 8%;top: 22rpx;padding: 14rpx;border-radius: 12rpx; box-shadow: 1rpx 1rpx 12rpx #d3d3d3" >
        <cover-image src='../../images/icon/share_active.png' bindtap="showModal_v"  class='ten_l flo_l' style="width: 48rpx;height: 48rpx;margin-right: 22rpx;"></cover-image>
        <cover-view class="font_32 orange bold"  bindtap="showModal_v">赶紧邀请好友，一起来寻找"Ta"吧！</cover-view>
      </cover-view>
      <cover-view class='btn' style="background: white;width: 200rpx;position: absolute;right: 0;bottom: 16%;padding: 12rpx;">
        <cover-image src='../../images/icon/position.png'  @tap="moveToLocation" class='ten_l flo_l' style="width: 62rpx;height: 62rpx;margin-right: 22rpx;"></cover-image>
        <cover-image src='../../images/icon/search.png' @tap="goto('/pages/home/search')" class='code flo_l' style="width: 68rpx;height: 68rpx;"></cover-image>
      </cover-view>
      <cover-view class='btn' style="background: white;width: 640rpx;position: absolute;right: 5%;bottom: 22rpx;padding: 14rpx;border-radius: 12rpx; box-shadow: 1rpx 1rpx 12rpx #d3d3d3">
        <cover-view style="border-bottom:1rpx solid #d3d3d3;padding-bottom: 12rpx" @tap="goto('/pages/home/information')">
          <cover-image src='http://local-pictures.img-cn-shenzhen.aliyuncs.com/201806/11/wx53cf66d72649eb5a.o6zAJs2lf_SH4K2plnWTlsSfhR70.IkD1JfquYA0L0651a2f1c9b29b4c2c633efc622d4de8.png'  class='ten_l flo_l' style="width: 78rpx;height: 78rpx;margin-right: 22rpx;border-radius: 50%"></cover-image>
          <cover-view class="font_32 orange bold" >Angelababy
            <cover-view class="font_26 black_6 bold flo_r" >3.14千米</cover-view>
          </cover-view>
          <cover-image src='../../images/icon/man_v.png'  @tap="moveToLocation" class='ten_l flo_l' style="width: 38rpx;height: 38rpx;margin-right: 22rpx;"></cover-image>
        </cover-view>
        <cover-view style="padding: 6rpx;">
          <cover-view class="flo_r font_26 orange" style="margin-top: 6rpx;">查看"Ta"</cover-view>
          <cover-image src='../../images/icon/love.png'  @tap="moveToLocation" class='ten_l flo_r' style="width: 38rpx;height: 38rpx;margin-right: 8rpx;"></cover-image>
        </cover-view>
      </cover-view>
      <cover-view class="commodity_screen"bindtap="hideModal"wx:if="{{showModalStatus}}"></cover-view>
      <cover-view animation="{{animationData}}"class="commodity_attr_box"wx:if="{{showModalStatus}}" >
        <cover-view class="weui-cells weui-cells_after-title">
          <cover-view  class="weui-cell weui-cell_access" hover-class="weui-cell_active" @tap="goto('/pages/home/sharePay')">
            <cover-view class="weui-cell__hd">
              <cover-image src="../../images/icon/pay_v.png" style="margin-right: 5px;vertical-align: middle;width:32px; height: 32px;"></cover-image>
            </cover-view>
            <cover-view class="weui-cell__bd font_32">邀请Ta并替Ta支付</cover-view>
            <!--<view class="weui-cell__ft weui-cell__ft_in-access">{{user.borrows_count}}本</view>-->
          </cover-view>
          <cover-view class="weui-cell weui-cell_access" hover-class="weui-cell_active">
            <cover-view class="weui-cell__hd">
              <cover-image src="../../images/icon/weixin.png" style="margin-right: 5px;vertical-align: middle;width:32px; height: 32px;"></cover-image>
            </cover-view>
            <cover-view class="weui-cell__bd">
              <button open-type="share" class="btn font_32" style="position: relative;z-index: 11111">发送给朋友或微信群</button>
            </cover-view>
            <!--<view class="weui-cell__ft weui-cell__ft_in-access">{{user.borrows_count}}本</view>-->
          </cover-view>
          <cover-view  class="weui-cell weui-cell_access" hover-class="weui-cell_active">
            <cover-view class="weui-cell__hd">
              <cover-image src="../../images/icon/friend_v.png" style="margin-right: 5px;vertical-align: middle;width:32px; height: 32px;"></cover-image>
            </cover-view>
            <cover-view class="weui-cell__bd font_32" @tap="shareFriend">生成卡片到朋友圈分享</cover-view>
            <!--<view class="weui-cell__ft weui-cell__ft_in-access">{{user.borrows_count}}本</view>-->
          </cover-view>
        </cover-view>
      </cover-view>
      <cover-view class="commodity_screen" @tap="saveImage" wx:if="{{showModal}}"></cover-view>
      <cover-view animation="{{animationImage}}"class="commodity_attr_box text-center" wx:if="{{showModal}}" @tap="saveImage" style="background: none !important;height: 100% !important;">
          <cover-image style="position: relative;left: 10%;top:10%" src="http://local-pictures.img-cn-shenzhen.aliyuncs.com/201806/14/wx53cf66d72649eb5a.o6zAJs2lf_SH4K2plnWTlsSfhR70.L2cteRZyEIJP66cb1b4030bf3cd564f3686c1c01fd39.png" class="shaerImage"></cover-image>
          <cover-view style="position: relative;left: 42% ;top: 10%;color: orange;background: white;width: 120rpx;height: 68rpx;margin-top: 22rpx;line-height: 68rpx;border-radius: 12rpx;box-shadow: 1rpx 1rpx 12rpx #96d3d0" @tap="saveImage('save')">保存</cover-view>
      </cover-view>
    </map>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import http from '../../mixins/http'
  import base from '../../mixins/base'
  import user from '../../mixins/user'
  import ShareMessage from '../../mixins/ShareMessage'
  import { service } from '../../config.js'
  import message from '../../components/message'

  export default class pageQr extends wepy.page {
    mixins = [base, http, user, ShareMessage]
    config = {
      navigationBarTitleText: '相遇地图',
      enablePullDownRefresh: false
    }
    data = {
//      markers标记点
      markers: [],
      title: '为营造更好的读书气氛，欢迎各位书友创建共享图书馆！',
      longitude: 0,
      latitude: 0,
      myLong: '',
      myLat: '',
      distance1: '',
      libraries: '',
      distance_library: {},
      text: '',
      height: '',
      showModalStatus: false,
      showModal: false,
      url: '',
      animation: [],
      animationData: {},
      animationImage: {}
    }
    components = {
      Message: message
    }
    watch = {
      text() {
        if (!this.myLong) {
          this.text = '需要您的位置，才能显示附近的异性哦！'
          this.$apply()
        }
      }
    }
    onShow() {
      this.updataMap()
      this.mapCtx = wx.createMapContext('map')
      this.getCenterLocation()

      this.$parent.getTracker(this.$root.$name, this.config.navigationBarTitleText)
    }
    onLoad() {
      this.getSystem()
      // wx.setNavigationBarColor({
      //   frontColor: '#ffffff',
      //   backgroundColor: '#e26432',
      //   animation: {
      //     duration: 400,
      //     timingFunc: 'easeIn'
      //   }
      // })
      // wx.setNavigationBarTitle({
      //   title: 'Ta的信息'
      // })

    }
    getSystem(type) {
      let that = this
      wx.getSystemInfo({
        success: function(res) {
          if (type) {
            that.height = res.windowHeight - 156 + 'px'
          }else {
            that.height = res.windowHeight   + 'px'
          }
          that.$apply()
        }
      })
    }
    updataMap() {
      let token = wx.getStorageSync('token')
      let myLong = wx.getStorageSync('myLong')
      let myLat = wx.getStorageSync('myLat')
      if (token) {
//        console.log(token)
        let that = this
        that.$put({
          url: service.updatemap,
          data: {
            location_latitude: myLat,
            location_longitude: myLong
          }
        }, {
          success: ({code, data}) => {

          },
          fail: ({code, data}) => {},
          complete: () => {
            this.loading = false
          }
        })
      }

    }

    getCenterLocation() {
      let that = this
      wx.getLocation({
        type: 'gcj02',
        success: function(res) {
          that.myLong = res.longitude
          that.myLat = res.latitude
          wx.setStorageSync('myLong', res.longitude)
          wx.setStorageSync('myLat', res.latitude)
          that.mapFunction()
          that.$apply()
        },
        fail: function () {
          wx.showModal({
            title: '提示',
            confirmText: '去授权',
            content: '不授权将无法查看地图哦！',
            success: (res) => {
              if (res.confirm) {
                that.openSetting()
              }
            }
          })
        }
      })
    }
    mapFunction() {
      let that = this
      that.$get({
        url: service.maps,
        data: {
          location_latitude: that.myLat,
          location_longitude: that.myLong,
          my_location_longitude: that.myLong,
          my_location_latitude: that.myLat
        }
      }, {
        success: ({code, data}) => {
          that.distance1 = data.distance1
          that.distance_library = data.distance_library
          if (data.distance_library == null) {
            return wx.showToast({
              title: '距离太远了！',
              image: '../images/icon/icon-error.png',
              duration: 1500
            })
          }
          if (that.distance_library.type == 'SHARE') {
            that.distance_library.url = '/pages/library/shareLibrary?id=' + that.distance_library.id
            that.$apply()
          } else {
            that.distance_library.url = '/pages/library/library?id=' + that.distance_library.id
            that.$apply()
          }
          console.log(that.distance_library)
          that.libraries = data.libraries
          let markersNew = []
          that.libraries.forEach((item, index, arr) => {
            markersNew.push(
              {
                iconPath: '/images/icon-position.png',
                id: item.id,
                latitude: item.location_latitude,
                longitude: item.location_longitude,
                width: 30,
                height: 30,
                callout: {
                  content: item.name,
                  color: '#2c8df6',
                  fontSize: 14,
                  borderRadius: 6,
                  bgColor: '#fff',
                  padding: 6,
                  display: 'BYCLICK',
                  boxShadow: '2px 2px 10px #aaa'
                }
              }
            )
          })
          that.markers = markersNew
          that.$apply()
          that.noMoreList = false
        },
        fail: ({code, data}) => {},
        complete: () => {
          this.loading = false
        }
      })
    }
    openSetting() {
      let that = this
      wepy.openSetting({
        success: (res) => {
          wepy.getLocation({
            altitude: true,
            type: 'gcj02',
            success: function (res) {
              that.myLat = res.latitude
              that.myLong = res.longitude
              that.$apply()
              that.mapFunction()
            },
            fail: function () {
            },
            complete: function () {
            }
          })
        }
      })
    }

    getLngLat() {
      let that = this
      that.mapCtx = wx.createMapContext('map')
      that.mapCtx.getCenterLocation({
        success: function (res) {
          that.longitude = res.longitude
          that.latitude = res.latitude
          that.$apply()
          let data = {
            location_latitude: that.latitude,
            location_longitude: that.longitude,
            my_location_longitude: that.myLong,
            my_location_latitude: that.myLat
          }
          that.$get({
            url: service.maps,
            data: data
          }, {
            success: ({code, data}) => {
              that.distance1 = data.distance1
              that.distance_library = data.distance_library
              if (data.distance_library == null) {
                return wx.showToast({
                  title: '距离太远了！',
                  image: '../images/icon/icon-error.png',
                  duration: 1500
                })
              }
              if (that.distance_library.type == 'SHARE') {
                that.distance_library.url = '/pages/library/shareLibrary?id=' + that.distance_library.id
                that.$apply()
              } else {
                that.distance_library.url = '/pages/library/library?id=' + that.distance_library.id
                that.$apply()
              }
              let markersNew = []
              that.libraries.forEach((item, index, arr) => {
                if (arr[index].id == that.distance_library.id) {
                  markersNew.push(
                    {
                      iconPath: '/images/icon-position_red.png',
                      id: item.id,
                      latitude: item.location_latitude,
                      longitude: item.location_longitude,
                      width: 30,
                      height: 30,
                      callout: {
                        content: item.name,
                        color: '#2c8df6',
                        fontSize: 14,
                        borderRadius: 6,
                        bgColor: '#fff',
                        padding: 6,
                        display: 'BYCLICK',
                        boxShadow: '2px 2px 10px #aaa'
                      }
                    }
                  )
                } else {
                  markersNew.push(
                    {
                      iconPath: '/images/icon-position.png',
                      id: item.id,
                      latitude: item.location_latitude,
                      longitude: item.location_longitude,
                      width: 30,
                      height: 30,
                      callout: {
                        content: item.name,
                        color: '#2c8df6',
                        fontSize: 14,
                        borderRadius: 6,
                        bgColor: '#fff',
                        padding: 6,
                        display: 'BYCLICK',
                        boxShadow: '2px 2px 10px #aaa'
                      }
                    }
                  )
                }
              })
              that.markers = markersNew
              that.markers.push(
                {
                  id: 0,
                  iconPath: '/images/icon-label.png',
                  longitude: res.longitude,
                  latitude: res.latitude,
                  width: 30,
                  height: 30
                }
              )
              that.$apply()
            },
            fail: ({code, data}) => {
            },
            complete: () => {
            }
          })
        }
      })
    }
    distance() {
      let to = ''
      this.markers.forEach((item, index, arr) => {
        to = arr[index].latitude + ',' + arr[index].longitude
      })
      let data = {
        mode: 'driving',
        from: this.latitude + ',' + this.longitude,
        to: to,
        key: 'DQ3BZ-SWT3U-HUQV7-BBO3U-OU7WS-53FBV'
      }
      let url = 'http://apis.map.qq.com/ws/distance/v1/'
      this.$get({url: url, data}, {
        success: ({code, data}) => {
          debugger
          wx.setStorageSync('is_new', data.user.is_news)
          if (data.user.is_news) {
            wepy.showTabBarRedDot({
              index: 4
            })
          } else {
            wepy.hideTabBarRedDot({
              index: 4
            })
          }
        }
      })
    }
    showImage() {
      // 显示遮罩层
      this.showModal = true
    }
    methods = {
      shareFriend() {
        var animation = wx.createAnimation({
          duration: 200,
          timingFunction:"linear",
          delay: 0
        })
        this.animation = animation
        animation.translateY(300).step()
        this.animationData = animation.export()
        setTimeout(function() {
          animation.translateY(0).step()
          this.animationImage = animation.export()
          this.showModalStatus = false
          this.$apply()
        }.bind(this), 200)
        this.showImage()
        var animation = wx.createAnimation({
          duration: 200,
          timingFunction:"linear",
          delay: 0
        })
        this.animation = animation
        animation.translateY(300).step()
        this.animationImage = animation.export()
        this.showModalStatus = true
        this.$apply()
        setTimeout(function() {
          animation.translateY(0).step()
          this.animationData = animation.export()
          this.$apply()
        }.bind(this), 200)
      },
      saveImage(type) {
        var animation = wx.createAnimation({
          duration: 200,
          timingFunction:"linear",
          delay: 0
        })
        this.animation = animation
        animation.translateY(300).step()
        this.animationImage = animation.export()
        setTimeout(function() {
          animation.translateY(0).step()
          this.animationImage = animation.export()
          this.showModal = false
          this.$apply()
        }.bind(this), 200)
        if(type) {
          wx.showToast({
             title: '下载成功！',
             duration: 1500
          })
        }
      },
      showModal_v() {
        // 显示遮罩层
        var animation = wx.createAnimation({
          duration: 200,
          timingFunction:"linear",
          delay: 0
        })
        this.animation = animation
        animation.translateY(300).step()
          this.animationData = animation.export()
          this.showModalStatus = true
          this.$apply()
        setTimeout(function() {
          animation.translateY(0).step()
          this.animationData = animation.export()
          this.$apply()
          this.getSystem()
        }.bind(this), 200)

      },
      hideModal() {
        // 隐藏遮罩层
        var animation = wx.createAnimation({
          duration: 200,
          timingFunction:"linear",
          delay: 0
        })
        this.animation = animation
        animation.translateY(300).step()
        this.animationData = animation.export()
        setTimeout(function() {
          animation.translateY(0).step()
          this.animationData = animation.export()
          this.showModalStatus = false
          this.getSystem()
          this.$apply()
        }.bind(this), 200)
      },
      open() {
        wx.showActionSheet({
          itemList: ['A', 'B', 'C'],
          success: function(res) {
            if (!res.cancel) {
              console.log(res.tapIndex)
            }
          }
        });
      },
      goto(url) {
        wx.navigateTo({url: url})
      },
      moveToLocation() {
        this.mapCtx.moveToLocation()
        if (!this.myLat) {
          return wx.showModal({
            title: '提示',
            confirmText: '去授权',
            content: '不授权无法查看图书馆的位置哦！',
            success: (res) => {
              if (res.confirm) {
                this.openSetting()
              }
            }
          })
        }
      },
      translateMarker() {
        this.mapCtx.translateMarker({
          markerId: 0,
          autoRotate: true,
          duration: 1000,
          destination: {
            latitude: 23.10229,
            longitude: 113.3345211
          },
          animationEnd() {
            console.log('animation end')
          }
        })
      },
      regionchange(e) {
        console.log(e.type)
        let that = this
        if (e.type == 'end') {
          this.getLngLat()
        } else {
          console.log('move')
          // this.mapCtx.getCenterLocation({
          //   success: function (res) {
          //     that.longitude = res.longitude
          //     that.latitude = res.latitude
          //     that.$apply()
          //   }
          // })
          // this.markers.forEach((item, index) => {
          //   if (item.id == 0) {
          //     console.log(index)
          //     this.markers.splice(index, 1)
          //   }
          // })
        }
      },
      markertap(e) {
        console.log(e.markerId)
        let that = this
        let data = {
          my_location_longitude: that.myLong,
          my_location_latitude: that.myLat
        }
        that.$get({
          url: service.libraries + '/' + e.markerId + '/infor',
          data: data
        }, {
          success: ({code, data}) => {
            that.distance1 = data.distance
            that.distance_library = data.library
            // if (that.distance_library == null) {
            //   return wx.showToast({
            //     title: '距离太远了！',
            //     image: '../images/icon/icon-error.png',
            //     duration: 1500
            //   })
            // }
            if (that.distance_library.type == 'SHARE') {
              that.distance_library.url = '/pages/library/shareLibrary?id=' + that.distance_library.id
              that.$apply()
            } else {
              that.distance_library.url = '/pages/library/library?id=' + that.distance_library.id
              that.$apply()
            }
            that.$apply()
          },
          fail: ({code, data}) => {
          },
          complete: () => {
          }
        })
        that.markers.forEach((item, index, arr) => {
          if (arr[index].id == e.markerId && arr[index].id !== 0) {
            arr[index].iconPath = '/images/icon-position_red.png'
          }
          if (arr[index].id !== e.markerId && arr[index].id !== 0) {
            arr[index].iconPath = '/images/icon-position.png'
          }
          if (arr[index].id == 0) {
            that.markers.splice(index, 1)
          }
        })
//        that.markers = markers_new
      }
    }
  }
</script>
<style lang="less">
  page{
    background: white;
    .commodity_screen {
      width:100%;
      height:100%;
      position:fixed;
      top:0;
      left:0;
      background:#000;
      opacity:0.2;
      overflow:hidden;
      z-index:1000;
      color:#fff;
    }
    .commodity_attr_box {
      width:100%;
      overflow:hidden;
      position:fixed;
      bottom:0;
      left:0;
      z-index:2000;
      background:#fff;
      /*padding-top:20rpx;*/
    }
    .shaerImage{
      width: 600rpx;
      height: 800rpx;
    }
  }
</style>
